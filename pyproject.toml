[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "hermes"
version = "0.1.1"
description = "An extendable CLI interface for LLMs"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "appdirs>=1.4.4",             # Added for cross-platform config directory
    "anthropic>=0.40.0",
    "boto3>=1.37.0",
    "exa-py>=1.7.3",
    "google-genai>=1.1.0",
    "google-generativeai>=0.8.3",
    "groq>=0.13.1",
    "inquirerpy>=0.3.4",
    "mako>=1.3.10",
    "markitdown[all]==0.1.0a1",
    "mistune>=3.0.2",
    "numpy>=2.2.0",
    "openai>=1.62.0",
    "prompt-toolkit>=3.0.48",
    "pygments>=2.18.0",
    "pypdf2>=3.0.1",
    "pyyaml>=6.0.2",
    "requests>=2.32.3",
    "sounddevice>=0.5.1",
    "soundfile>=0.12.1",
    "tenacity>=9.0.0",
    "jsonpickle>=4.0.5",
]

[project.scripts]
hermes = "hermes.main:main"

[project.optional-dependencies]
dev = [
    "ipython>=8.31.0",
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v"

[tool.hatch.build]
include = ["hermes"]

[dependency-groups]
dev = ["invoke>=2.2.0", "pyright>=1.1.400", "ruff>=0.11.8"]

[tool.ruff]
line-length = 140


[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",   # Flake8 core
    "C90", # McCabe complexity
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "ICN", # flake8-import-conventions
    "PIE", # flake8-pie
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
]

# Aggressive settings for strict clean code
[tool.ruff.lint.mccabe]
max-complexity = 5

[tool.ruff.lint.pylint]
max-args = 4
max-branches = 8
max-returns = 4
max-statements = 20

[tool.ruff.lint.pydocstyle]
convention = "google" # or "numpy", "pep257"
[tool.pyright]
python.pythonPath = ".venv/bin/python"
